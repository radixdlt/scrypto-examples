CALL_METHOD
    ComponentAddress("component_sim1qgehpqdhhr62xh76wh6gppnyn88a0uau68epljprvj3sxknsqr")
    "lock_fee"
    Decimal("10");
# Withdraw 100 units of token_a from account and put it in bucket 
CALL_METHOD
    ComponentAddress("${account_address}")
    "withdraw_by_amount"
    Decimal("100")
    ResourceAddress("${token_a}");
TAKE_FROM_WORKTOP_BY_AMOUNT
    Decimal("100")
    ResourceAddress("${token_a}")
    Bucket("bucket1");

# Withdraw 50 units of token_b from account and put it in bucket 
CALL_METHOD
    ComponentAddress("${account_address}")
    "withdraw_by_amount"
    Decimal("50")
    ResourceAddress("${token_b}");
TAKE_FROM_WORKTOP_BY_AMOUNT
    Decimal("50")
    ResourceAddress("${token_b}")
    Bucket("bucket2");

# Invoke add_liquidity with token_a and token_b
CALL_METHOD
    ComponentAddress("${component_address}")
    "add_liquidity"
    Bucket("bucket1")
    Bucket("bucket2");

# Return ramining amounts of token_a and token_b plus lp_token to account
CALL_METHOD
    ComponentAddress("${account_address}")
    "deposit_batch"
    Expression("ENTIRE_WORKTOP");
